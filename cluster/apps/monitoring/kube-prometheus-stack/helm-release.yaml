---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 34.9.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    fullnameOverride: prometheus
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        # receivers:
        #   - name: "null"
        # route:
        #   group_by: ["alertname", "job"]
        #   group_wait: 30s
        #   group_interval: 5m
        #   repeat_interval: 6h
        #   receiver: "pushover"
        #   routes:
        #     - receiver: "null"
        #       matchers:
        #         - alertname =~ "InfoInhibitor|Watchdog"
        # inhibit_rules:
        #   - source_matchers:
        #       - severity = "critical"
        #     target_matchers:
        #       - severity = "warning"
        #     equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - &hostam "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *hostam
            secretName: alert-manager-tls
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 1Gi
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.129.31
        - 192.168.129.32
        - 192.168.129.33
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.129.31
        - 192.168.129.32
        - 192.168.129.33
      service:
        enabled: true
        port: 10259
        targetPort: 10259
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.129.31
        - 192.168.129.32
        - 192.168.129.33
        - 192.168.129.37
        - 192.168.129.38
        - 192.168.129.39
    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.129.31
        - 192.168.129.32
        - 192.168.129.33
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - &hostp "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *hostp
            secretName: prometheus-tls
      # thanosService:
      #   enabled: true
      # thanosServiceMonitor:
      #   enabled: true
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 72h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 10Gi
        # thanos:
        #   image: quay.io/thanos/thanos:v0.25.2
        #   version: v0.22.0
        #   objectStorageConfig:
        #     name: thanos-objstore
        #     key: objstore.yml
        additionalScrapeConfigs:
          - job_name: minio
            honor_timestamps: true
            bearer_token: ${SECRET_MINIO_TOKEN}
            metrics_path: /minio/v2/metrics/cluster
            scheme: https
            static_configs:
              - targets:
                  - "minio.${SECRET_DOMAIN}:443"
